{"version":3,"sources":["game/GameContext.js","game/useGame.js","game/useSpaceDownEvent.js","game/useGameDirection.js","game/useGameLoop.js","game/GameGrid.jsx","game/GameMenu.js","game/Game.js","game/gameContextStateReducer.js","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","gridSize","speed","paused","increaseSpeed","pauseGame","unpauseGame","setGridSize","useGame","handler","useContext","useState","x","y","snake","setSnake","randomIndex","fruit","setFruit","direction","initDirection","useRef","handleKeyDown","e","key","current","useEffect","document","addEventListener","removeEventListener","useGameDirection","onTick","interval","setInterval","clearInterval","useGameLoop","snakeHead","newSnakeHead","fruitEaten","newFruitPosition","fruitOnSnake","length","randomFruitPosition","setFruitPosition","some","snakePart","console","log","find","alert","newSnake","slice","event","keyCode","filter","n","Math","floor","random","useLayoutEffect","querySelector","style","GameGrid","indexes","useMemo","Array","from","map","_","index","getCellClass","className","GameMenu","onClick","value","name","el","htmlFor","type","id","onChange","checked","Game","InitialGameContextState","initGameContextState","gameContextStateReducer","state","action","payload","Error","App","useReducer","gameContextState","dispatchGameContextAction","useCallback","Provider","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2TAYeA,EAVKC,wBAAc,CACjCC,SAAU,EACVC,MAAO,EACPC,QAAQ,EACRC,cAAe,aACfC,UAAW,aACXC,YAAa,aACbC,YAAa,e,cCHC,SAASC,IAAW,ICJOC,EDIR,EAC6BC,qBAC7DX,GADOE,EADyB,EACzBA,SAAUC,EADe,EACfA,MAAOE,EADQ,EACRA,cAAeC,EADP,EACOA,UAAWF,EADlB,EACkBA,OADlB,EAIPQ,mBAAS,CAClC,CAAEC,EAAGX,EAAW,EAAGY,EAAGZ,EAAW,GACjC,CAAEW,EAAGX,EAAW,EAAGY,EAAGZ,EAAW,EAAI,GACrC,CAAEW,EAAGX,EAAW,EAAGY,EAAGZ,EAAW,EAAI,KAPL,mBAI1Ba,EAJ0B,KAInBC,EAJmB,OASPJ,mBAAS,CAClCC,EAAGI,EAAYf,GACfY,EAAGG,EAAYf,KAXiB,mBAS1BgB,EAT0B,KASnBC,EATmB,KAc3BC,EElBQ,SAA0BC,GACvC,IAAMD,EAAYE,iBAAOD,GAS1B,SAASE,EAAcC,GACR,YAAVA,EAAEC,IACLL,EAAUM,QAAU,KACA,cAAVF,EAAEC,IACZL,EAAUM,QAAU,OACA,cAAVF,EAAEC,IACZL,EAAUM,QAAU,OACA,eAAVF,EAAEC,MACZL,EAAUM,QAAU,SAIrB,OAnBDC,qBAAU,WAET,OADAC,SAASC,iBAAiB,UAAWN,GAC9B,WACNK,SAASE,oBAAoB,UAAWP,MAEvC,IAcKH,EAAUM,QFJAK,CAAiB,OGlBrB,YAAuC,IAAjBC,EAAgB,EAAhBA,OAAQ7B,EAAQ,EAARA,MAC3CwB,qBAAU,WACR,IAAMM,EAAWC,YAAYF,EAAQ7B,GAErC,OAAO,WACLgC,cAAcF,MAEf,CAAC9B,EAAO6B,IHYZI,CAAY,CAAEjC,QAAO6B,OA0BrB,WACC,IAAK5B,EAAQ,CAAC,IACNiC,EADK,YACQtB,EADR,MAENuB,EAAY,eAAQD,GACpBE,EACLrB,EAAML,IAAMyB,EAAazB,GAAKK,EAAMJ,IAAMwB,EAAaxB,EAEpDyB,KAdN,WACC,GACCC,UACQC,EAAaC,OAAS,GAC/BvB,EAASwB,GAWPC,GACAvC,KAEiB,OAAde,EACHkB,EAAazB,GAAK,EACM,SAAdO,EACVkB,EAAazB,GAAK,EACM,UAAdO,EACVkB,EAAaxB,GAAK,EACM,SAAdM,IACVkB,EAAaxB,GAAK,GAWfC,EAAM8B,MAAK,SAAAC,GAAS,OAAIA,EAAUjC,EAAI,IAAMiC,EAAUhC,EAAI,IAAMgC,EAAUjC,EAAI,GAAKiC,EAAUhC,EAAI,MACnGiC,QAAQC,IAAI,6BAIVjC,EAAMkC,MAAK,SAAAH,GAAS,OAAIA,EAAUjC,IAAMyB,EAAazB,GAAKiC,EAAUhC,IAAMwB,EAAaxB,MACzFoC,MAAM,kCAZR,IAAMC,EAAqB,CACxBb,GADwB,OAAVC,EAAU,YACPxB,EAAMqC,MAAM,EAAGrC,EAAM2B,SADd,YAEP3B,EAAMqC,MAAM,EAAGrC,EAAM2B,OAAS,KAClD1B,EAASmC,OCvE8BzC,EDoBvBJ,ECnBjBqB,qBAAU,WACR,SAASJ,EAAc8B,GACC,KAAlBA,EAAMC,SACR5C,IAMJ,OAFAkB,SAASC,iBAAiB,UAAWN,GAE9B,WACLK,SAASE,oBAAoB,UAAWP,MAEzC,CAACb,IDSL,IACI+B,EADAE,EAAsB,GAI1B,SAASH,IACRG,EAAsB,CACrB9B,EAAGI,EAAYf,GACfY,EAAGG,EAAYf,IAEhBuC,EAAe1B,EAAMwC,QACpB,SAACT,GAAD,OACCA,EAAUjC,IAAM8B,EAAoB9B,GACpCiC,EAAUhC,IAAM6B,EAAoB7B,KA0DvC,SAASG,EAAYuC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAGnC,OAVAI,2BAAgB,WACEhC,SAASiC,cAAc,cAC/BC,MACR,sEACC,CAAC5C,IAMG,CAAEH,QAAOG,S,MI/FF,SAAS6C,EAAT,GAA+C,IAA3B7D,EAA0B,EAA1BA,SAAUgB,EAAgB,EAAhBA,MAAOH,EAAS,EAATA,MAC7CiD,EAAUC,mBAAQ,kBAAMC,MAAMC,KAAK,CAAEzB,OAAQxC,IAAYkE,KAAI,SAACC,EAAGC,GAAJ,OAAcA,OAAQ,CAACpE,IAE1F,SAASqE,EAAa1D,EAAGC,GACxB,OAAIC,EAAM,GAAGF,IAAMA,GAAKE,EAAM,GAAGD,IAAMA,EAC/B,gBAEJC,EAAM8B,MAAK,SAACC,GAAD,OAAeA,EAAUjC,IAAMA,GAAKiC,EAAUhC,IAAMA,KAC3D,YAEJI,EAAML,IAAMA,GAAKK,EAAMJ,IAAMA,EACzB,YAED,WAGR,OACC,yBAAK0D,UAAU,QACbR,EAAQI,KAAI,SAACvD,GAAD,OACZ,yBAAK2D,UAAU,UAAU/C,IAAKZ,GAC5BmD,EAAQI,KAAI,SAACtD,GAAD,OACZ,yBAAK0D,UAAWD,EAAa1D,EAAGC,GAAIW,IAAG,UAAKZ,EAAL,YAAUC,a,MCnBxC,SAAS2D,IACtB,IADiC,EAYa9D,qBAAWX,GAAlDO,EAZ0B,EAY1BA,YAAaC,EAZa,EAYbA,YAAaN,EAZA,EAYAA,SAElC,OACC,yBAAKsE,UAAU,YACd,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,mBACd,4BAAQA,UAAU,aAAaE,QAASnE,GAAxC,QACI,yBAAKiE,UAAU,SACb,oCACA,kEACA,yDAEN,0BAAMA,UAAU,gBACf,kDAxBqB,CACtB,CAACG,MAAO,KAAMC,KAAM,SACpB,CAACD,MAAO,KAAMC,KAAM,SACpB,CAACD,MAAO,KAAMC,KAAM,UAsBER,KAAI,SAAAS,GACzB,OACO,2BAAOpD,IAAKoD,EAAGD,KAAME,QAASD,EAAGD,MACvC,2BACCG,KAAK,QACLC,GAAIH,EAAGD,KACPD,MAAOE,EAAGF,MACVM,SAAUzE,EACV0E,QAAShF,IAAa2E,EAAGF,QAEzBE,EAAGD,YCnCK,SAASO,IAAQ,IAAD,EACCxE,qBAAWX,GAAjCE,EADqB,EACrBA,SAAUE,EADW,EACXA,OADW,EAEJK,IAAjBS,EAFqB,EAErBA,MAAOH,EAFc,EAEdA,MAEf,OACE,oCACCX,EAAS,kBAAC,EAAD,MAAc,KACxB,kBAAC,EAAD,CAAUF,SAAUA,EAAUgB,MAAOA,EAAOH,MAAOA,KCbhD,IAAMqE,EAA0B,CAAEjF,MAAO,IAAKC,QAAQ,EAAMF,SAAU,MAEtE,SAASmF,IACd,OAAOD,EAGM,SAASE,EAAwBC,EAAOC,GAAS,IACtDT,EAAkBS,EAAlBT,KAAMU,EAAYD,EAAZC,QAEd,OAAQV,GACN,IAAK,gBACH,OAAO,2BACFQ,GADL,IAEEpF,MAAOoF,EAAMpF,MAAQsF,IAEzB,IAAK,YACH,OAAO,2BACFF,GADL,IAEEnF,QAAQ,IAEZ,IAAK,cACH,OAAO,2BACFmF,GADL,IAEEnF,QAAQ,IAEZ,IAAK,cACH,OAAO,2BACFmF,GADL,IAEErF,SAAUuF,IAEd,QACE,MAAM,IAAIC,MAAJ,kDAAqDX,KCclDY,MAxCf,WAEC,IAFc,EAIyCC,qBACpDN,EACAF,EACAC,GAPW,mBAINQ,EAJM,KAIYC,EAJZ,KASN1F,EAA4ByF,EAA5BzF,OAAQD,EAAoB0F,EAApB1F,MAAOD,EAAa2F,EAAb3F,SAEhBG,EAAgB0F,uBAAY,WAChCD,EAA0B,CAAEf,KAAM,gBAAiBU,QAV9B,OAWpB,IAEGnF,EAAYyF,uBAAY,WAC5BD,EAA0B,CAAEf,KAAM,gBACjC,IAEGxE,EAAcwF,uBAAY,WAC9BD,EAA0B,CAAEf,KAAM,kBACjC,IAIJ,OACC,kBAAC,EAAYiB,SAAb,CAAsBrB,MAAO,CAC3BxE,QACAD,WACAG,gBACAD,SACAG,cACAD,YACAE,YAXH,SAAqBgB,GAClBsE,EAA0B,CAAEf,KAAM,cAAeU,QAASjE,EAAEyE,OAAOtB,WAYnE,kBAACQ,EAAD,QC5BgBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7E,SAAS8E,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnE,QAAQmE,MAAMA,EAAMC,c","file":"static/js/main.ad414dc5.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst GameContext = createContext({\r\n\tgridSize: 0,\r\n\tspeed: 0,\r\n\tpaused: true,\r\n\tincreaseSpeed: () => {},\r\n\tpauseGame: () => {},\r\n\tunpauseGame: () => {},\r\n\tsetGridSize: () => {},\r\n});\r\n\r\nexport default GameContext;\r\n","import { useState, useContext, useLayoutEffect } from 'react';\r\nimport useGameDirection from './useGameDirection';\r\nimport useGameLoop from './useGameLoop';\r\nimport GameContext from './GameContext';\r\nimport useSpaceDownEvent from './useSpaceDownEvent';\r\n\r\nexport default function useGame() {\r\n\tconst { gridSize, speed, increaseSpeed, pauseGame, paused } = useContext(\r\n\t\tGameContext\r\n\t);\r\n\tconst [snake, setSnake] = useState([\r\n\t\t{ x: gridSize / 2, y: gridSize / 2 },\r\n\t\t{ x: gridSize / 2, y: gridSize / 2 + 1 },\r\n\t\t{ x: gridSize / 2, y: gridSize / 2 + 2 },\r\n\t]);\r\n\tconst [fruit, setFruit] = useState({\r\n\t\tx: randomIndex(gridSize),\r\n\t\ty: randomIndex(gridSize),\r\n\t});\r\n\r\n\tconst direction = useGameDirection('up');\r\n\tuseGameLoop({ speed, onTick: handleGameTick });\r\n\tuseSpaceDownEvent(pauseGame);\r\n\r\n\tlet randomFruitPosition = {};\r\n\tlet fruitOnSnake;\r\n\t\r\n\r\n\tfunction newFruitPosition() {\r\n\t\trandomFruitPosition = {\r\n\t\t\tx: randomIndex(gridSize),\r\n\t\t\ty: randomIndex(gridSize),\r\n\t\t};\r\n\t\tfruitOnSnake = snake.filter(\r\n\t\t\t(snakePart) =>\r\n\t\t\t\tsnakePart.x === randomFruitPosition.x &&\r\n\t\t\t\tsnakePart.y === randomFruitPosition.y\r\n\t\t);\r\n\t}\r\n\r\n\tfunction setFruitPosition() {\r\n\t\tdo {\r\n\t\t\tnewFruitPosition();\r\n\t\t} while (fruitOnSnake.length > 0);\r\n\t\tsetFruit(randomFruitPosition);\r\n\t}\r\n\r\n\tfunction handleGameTick() {\r\n\t\tif (!paused) {\r\n\t\t\tconst [snakeHead] = snake;\r\n\t\t\tconst newSnakeHead = { ...snakeHead };\r\n\t\t\tconst fruitEaten =\r\n\t\t\t\tfruit.x === newSnakeHead.x && fruit.y === newSnakeHead.y;\r\n\r\n\t\t\tif (fruitEaten) {\r\n\t\t\t\tsetFruitPosition();\r\n\t\t\t\tincreaseSpeed();\r\n\t\t\t}\r\n\t\t\tif (direction === 'up') {\r\n\t\t\t\tnewSnakeHead.x -= 1;\r\n\t\t\t} else if (direction === 'down') {\r\n\t\t\t\tnewSnakeHead.x += 1;\r\n\t\t\t} else if (direction === 'right') {\r\n\t\t\t\tnewSnakeHead.y += 1;\r\n\t\t\t} else if (direction === 'left') {\r\n\t\t\t\tnewSnakeHead.y -= 1;\r\n\t\t\t}\r\n\t\t\tisSnakeOutBoard()\r\n\t\t\tisSnakeEatSelf()\r\n\r\n\t\t\tconst newSnake = fruitEaten\r\n\t\t\t? [newSnakeHead, ...snake.slice(0, snake.length)]\r\n\t\t\t: [newSnakeHead, ...snake.slice(0, snake.length - 1)];\r\n\t\t\tsetSnake(newSnake);\r\n\r\n\t\t\tfunction isSnakeOutBoard() {\r\n\t\t\t\tif(snake.some(snakePart => snakePart.x > 10 || snakePart.y > 10 || snakePart.x < 0 || snakePart.y < 0)) {\r\n\t\t\t\t\tconsole.log(\"UPS! Snake is escaping!!!\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction isSnakeEatSelf() {\r\n\t\t\t\tif(snake.find(snakePart => snakePart.x === newSnakeHead.x && snakePart.y === newSnakeHead.y)) {\r\n\t\t\t\t\talert(\"UPS! Snake is eating themself!\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\tuseLayoutEffect(() => {\r\n\t\tconst newFruit = document.querySelector('.fruitCell');\r\n\t\tnewFruit.style =\r\n\t\t\t'transition: transform 0.5s; transform: rotate3d(1, 1, 1, 360deg);';\r\n\t}, [fruit]);\r\n\r\n\tfunction randomIndex(n) {\r\n\t\treturn Math.floor(Math.random() * n);\r\n\t}\r\n\r\n\treturn { snake, fruit };\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nexport default function useSpaceDownEvent(handler) {\r\n  useEffect(() => {\r\n    function handleKeyDown(event) {\r\n      if (event.keyCode === 32) {\r\n        handler();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handler]);\r\n} ","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useGameDirection(initDirection) {\r\n  const direction = useRef(initDirection);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('keydown', handleKeyDown);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tfunction handleKeyDown(e) {\r\n\t\tif (e.key === 'ArrowUp') {\r\n\t\t\tdirection.current = 'up';\r\n\t\t} else if (e.key === 'ArrowDown') {\r\n\t\t\tdirection.current = 'down';\r\n\t\t} else if (e.key === 'ArrowLeft') {\r\n\t\t\tdirection.current = 'left';\r\n\t\t} else if (e.key === 'ArrowRight') {\r\n\t\t\tdirection.current = 'right';\r\n\t\t}\r\n\t}\r\n\r\n  return direction.current;\r\n}","import { useEffect } from 'react';\r\n\r\nexport default function useGameLoop({onTick, speed}) {\r\n  useEffect(() => {\r\n    const interval = setInterval(onTick, speed);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [speed, onTick]);\r\n}","import React, { useMemo } from 'react';\r\nimport './GameGrid.css';\r\n\r\nexport default function GameGrid({ gridSize, fruit, snake }) {\r\n\tconst indexes = useMemo(() => Array.from({ length: gridSize }).map((_, index) => index), [gridSize])\r\n\r\n\tfunction getCellClass(x, y) {\r\n\t\tif (snake[0].x === x && snake[0].y === y) {\r\n\t\t\treturn 'snakeHeadCell';\r\n\t\t}\r\n\t\tif (snake.some((snakePart) => snakePart.x === x && snakePart.y === y)) {\r\n\t\t\treturn 'snakeCell';\r\n\t\t}\r\n\t\tif (fruit.x === x && fruit.y === y) {\r\n\t\t\treturn 'fruitCell';\r\n\t\t}\r\n\t\treturn 'gridCell';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='grid'>\r\n\t\t\t{indexes.map((x) => (\r\n\t\t\t\t<div className='gridRow' key={x}>\r\n\t\t\t\t\t{indexes.map((y) => (\r\n\t\t\t\t\t\t<div className={getCellClass(x, y)} key={`${x}x${y}`} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","import React, { useContext, useReducer } from 'react';\r\nimport GameContext from './GameContext';\r\nimport './GameMenu.css';\r\n// import gameContextStateReducer, { initGameContextState, InitialGameContextState } from './gameContextStateReducer';\r\n\r\nexport default function GameMenu() {\r\n  const gridSizeOptions = [\r\n    {value: '10', name: '10x10'},\r\n    {value: '12', name: '12x12'},\r\n    {value: '15', name: '15x15'},\r\n  ]\r\n  // const [gameContextState, dispatchGameContextAction] = useReducer(\r\n  //   gameContextStateReducer,\r\n  //   InitialGameContextState,\r\n  //   initGameContextState,\r\n  // );\r\n  // const { gridSize } = gameContextState;\r\n\tconst { unpauseGame, setGridSize, gridSize } = useContext(GameContext);\r\n\r\n\treturn (\r\n\t\t<div className='gameMenu'>\r\n\t\t\t<div className='gameMenuOverlay' />\r\n\t\t\t<div className='gameMenuContent'>\r\n\t\t\t\t<button className='playButton' onClick={unpauseGame}>PLAY</button>\r\n        <div className='hints'>\r\n          <p>HINTS</p>\r\n          <p>use SPACEBAR for pause/unpause game</p>\r\n          <p>use ARROWS for move snake</p>\r\n        </div>\r\n\t\t\t\t<form className='gridSizeForm'>\r\n\t\t\t\t\t<p>set board game size</p>\r\n        { gridSizeOptions.map(el => {\r\n\t\t\t\t\treturn (\r\n            <label key={el.name} htmlFor={el.name}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tid={el.name}\r\n\t\t\t\t\t\t\tvalue={el.value}\r\n\t\t\t\t\t\t\tonChange={setGridSize}\r\n\t\t\t\t\t\t\tchecked={gridSize === el.value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{el.name}\r\n\t\t\t\t\t</label>\r\n          )\r\n        })}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, {useContext} from 'react';\r\nimport GameContext from './GameContext'\r\nimport useGame from './useGame'\r\nimport GameGrid from './GameGrid.jsx'\r\nimport GameMenu from './GameMenu';\r\n\r\nexport default function Game() {\r\n  const { gridSize, paused  } = useContext(GameContext);\r\n  const { fruit, snake } = useGame();\r\n\r\n  return (\r\n    <>\r\n    {paused ? <GameMenu/> : null}\r\n    <GameGrid gridSize={gridSize} fruit={fruit} snake={snake}/>\r\n    </>\r\n  )\r\n}","export const InitialGameContextState = { speed: 500, paused: true, gridSize: '10' };\r\n\r\nexport function initGameContextState() {\r\n  return InitialGameContextState;\r\n}\r\n\r\nexport default function gameContextStateReducer(state, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'increaseSpeed':\r\n      return {\r\n        ...state,\r\n        speed: state.speed * payload,\r\n      };\r\n    case 'pauseGame':\r\n      return {\r\n        ...state,\r\n        paused: true,\r\n      };\r\n    case 'unpauseGame':\r\n      return {\r\n        ...state,\r\n        paused: false,\r\n      };\r\n    case 'setGridSize':\r\n      return {\r\n        ...state,\r\n        gridSize: payload,\r\n      };\r\n    default:\r\n      throw new Error(`unknown game state reducer action type: ${type}`);\r\n  }\r\n}","import React, { useCallback, useReducer } from 'react';\r\nimport GameContext from './game/GameContext';\r\nimport Game from './game/Game';\r\nimport gameContextStateReducer, { initGameContextState, InitialGameContextState } from './game/gameContextStateReducer';\r\n\r\nfunction App() {\r\n\t// const gridSize = 10;\r\n\tconst SpeedMultiplier = 0.8;\r\n\r\n  const [gameContextState, dispatchGameContextAction] = useReducer(\r\n    gameContextStateReducer,\r\n    InitialGameContextState,\r\n    initGameContextState,\r\n\t);\r\n\tconst { paused, speed, gridSize } = gameContextState;\r\n\r\n  const increaseSpeed = useCallback(() => {\r\n    dispatchGameContextAction({ type: 'increaseSpeed', payload: SpeedMultiplier });\r\n  }, []);\r\n\r\n  const pauseGame = useCallback(() => {\r\n    dispatchGameContextAction({ type: 'pauseGame' });\r\n  }, []);\r\n\r\n  const unpauseGame = useCallback(() => {\r\n    dispatchGameContextAction({ type: 'unpauseGame' });\r\n  }, []);\r\n\tfunction setGridSize(e) {\r\n    dispatchGameContextAction({ type: 'setGridSize', payload: e.target.value });\r\n\t}\t\r\n\treturn (\r\n\t\t<GameContext.Provider value={{ \r\n\t\t\t\tspeed, \r\n\t\t\t\tgridSize, \r\n\t\t\t\tincreaseSpeed, \r\n\t\t\t\tpaused, \r\n\t\t\t\tunpauseGame, \r\n\t\t\t\tpauseGame,\r\n\t\t\t\tsetGridSize \r\n\t\t\t}}>\r\n\t\t\t\t<Game />\r\n\t\t</GameContext.Provider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}